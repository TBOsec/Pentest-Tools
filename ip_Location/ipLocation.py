#!/usr/bin/python
# -*- coding: UTF-8 -*-
# author：TBOsec
import argparse
import json
import sys

import httpx
from rich import print as rprint
from rich.console import Console
from rich.table import Table

ipString = ""  # 查询的ip地址
inFile = ""
outFile = ""
global num
global Infos
global InfoFail
num = 0
Infos = []
InfoFail = []
key = {
    "private range": "私有IP地址范围",
    "reserved range": "保留IP地址范围",
    "invalid query": "无效查询",
}


def showResult():
    line = 0
    console = Console()
    table = Table(show_header=True, header_style="bold magenta")
    table.add_column("序号", style="dim")
    table.add_column("IP", justify="center")
    table.add_column("国家")
    table.add_column("省份")
    table.add_column("城市")
    table.add_column("ISP", justify="left")
    table.add_column("rDNS", justify="center")
    table.add_column("是否代理")
    for ipInfo in Infos:
        line = line + 1
        table.add_row(
            str(line),
            ipInfo[0],
            ipInfo[1],
            ipInfo[2],
            ipInfo[3],
            ipInfo[4],
            ipInfo[5],
            str(ipInfo[6]),
        )
    console.print(table)


def IP2info(ipString):
    ipInfo = []  # 返回的ip信息
    url = (
        "http://ip-api.com/json/"
        + ipString
        + "?fields=status,message,country,regionName,city,isp,reverse,query,proxy&lang=zh-CN"
    )
    try:
        r = httpx.get(url=url)
        ipResult = json.loads(r.text)

        # 解析返回的json数据
        if ipResult["status"] == "fail":
            InfoFail.append(ipResult["query"] + "  " + key[ipResult["message"]])

        elif ipResult["status"] == "success":
            ipInfo.append(ipResult["query"])
            ipInfo.append(ipResult["country"])
            ipInfo.append(ipResult["regionName"])
            ipInfo.append(ipResult["city"])
            ipInfo.append(ipResult["isp"])
            ipInfo.append(ipResult["reverse"])
            ipInfo.append(ipResult["proxy"])
            Infos.append(ipInfo)
    except:

        pass


def readIpFile(inFile):
    global num
    ips = []  # ip地址表
    # 用于保存到文件
    country = []
    regionName = []
    city = []
    isp = []
    with open(inFile, "r") as f:
        all_ip = f.readlines()
        for ipString in all_ip:
            ipString = ipString.replace("\n", "")

            IP2info(ipString)
            num += 1
        print("\n成功查询%s条记录！！" % (num))
    # 保存结果到文件
    # with open(outFile, "a+") as f:
    #     for i in range(len(country)):
    #         f.write(ips[i] + ":\n")
    #         f.write(
    #             "country:"
    #             + country[i]
    #             + "  regionName:"
    #             + regionName[i]
    #             + "  city:"
    #             + city[i]
    #             + "  isp:"
    #             + isp[i]
    #             + "\n"
    #         )
    #     num = len(country)
    #     if num == 0:
    #         print("\nSorry 无查询到记录，或许网络导致，try again！！")
    #     else:
    #         print("\n成功查询%s条记录！！" % (num))


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument("-ip", "--ip", metavar="", default="", help="IP地址")
    parser.add_argument("-f", "--file", metavar="", default="", help="IP地址文件")
    parser.add_argument(
        "-o",
        "--output",
        metavar="",
        default="",
        help="结果存放地址",
    )
    args = parser.parse_args()

    if args.ip:
        # print(args.ip)
        ip = str(args.ip)
        IP2info(ip)

    if args.file:
        inFile = args.file
        readIpFile(inFile)
    if args.output:
        outFile = args.output
    # else:
    #     sys.exit()

    # 打印结果信息
    if len(Infos) != "0":
        showResult()
    if len(InfoFail) != "0":
        for fail in InfoFail:
            rprint("[bold green][+][/bold green] {0}".format(fail))


if __name__ == "__main__":
    main()
