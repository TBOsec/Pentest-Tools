#!/usr/bin/python
# -*- coding: UTF-8 -*-
# author：TBOsec
import argparse
import random
import re
import time

import httpx
from rich.live import Live
from rich.table import Table

table = Table(show_header=True, header_style="bold magenta")


def generate_table(ID, URL, Title, Server, Status_code) -> Table:

    table.add_row(f"{ID}", f"{URL}", f"{Title}", f"{Server}", f"{Status_code}")
    return table


def checkStatus(url):
    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; WOW64; rv:51.0) Gecko/20100101 Firefox/51.0"
    }
    res = httpx.get(url, headers=headers, verify=False)
    return res


def getTitle(res):
    status_code = res.status_code
    enc = res.encoding
    if res.headers["Server"]:
        Server = res.headers["Server"]
    else:
        Server = "Null"

    try:
        text = res.text.encode(enc).decode("utf-8")
    except:
        try:
            text = res.text.encode(enc).decode("gbk")
        except:
            pass
    try:
        title = re.search(r"<title>(.*?)</title>", text, re.I).group(1)
    except:
        title = "Null"

    return title, Server, status_code


def File2url(filename):
    urls = []
    with open(filename, "r") as f:
        urls = f.readlines()
    return urls


def main():
    urls = []
    parser = argparse.ArgumentParser(description="URL 存活检测")
    parser.add_argument("-u", "--url", metavar="", default="", help="URL地址")
    parser.add_argument("-f", "--file", metavar="", default="", help="URL文件")
    parser.add_argument("-o", "--outfile", metavar="", default="", help="结果存放地址")

    args = parser.parse_args()
    file_name = args.file
    outfile = args.outfile
    if args.url:
        urls.append(args.url)
    if args.file:
        urls = File2url(file_name)
    # urls = ["ip138.com", "jd.com", "taobao.com"]
    with Live(refresh_per_second=4) as live:
        id = 1
        """Make a new table."""
        table.add_column("ID", justify="center")
        table.add_column("URL", justify="left")
        table.add_column("Title", justify="left")
        table.add_column("Server", justify="left")
        table.add_column("Status Code", justify="center")
        for url in urls:
            url = url.replace("\n", "")
            if "http://" or "https://" not in url:
                url = "http://" + url
                res = checkStatus(url)
                if res.status_code in [200, 301, 302, 404, 403, 500]:

                    title, Server, status_code = getTitle(res)
                    live.update(generate_table(id, url, title, Server, status_code))
                    id += 1


if __name__ == "__main__":
    main()
